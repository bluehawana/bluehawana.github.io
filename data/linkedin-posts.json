[
  {
    "id": "demo-1757390500429-1",
    "content": "🚀 Excited to share that I've successfully implemented automated LinkedIn post synchronization using OAuth 2.0!\n\nThe system now automatically:\n✅ Authenticates with LinkedIn API\n✅ Detects new posts using multiple strategies\n✅ Creates properly formatted blog posts\n✅ Syncs to GitHub repository\n✅ Runs on automated schedule\n\nThis demonstrates the power of combining OAuth authentication with browser automation for content synchronization. The next step is enhancing the post content extraction algorithms.\n\n#LinkedIn #OAuth #Automation #WebDevelopment #API",
    "date": "2025-09-09",
    "timestamp": 1757390500429,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "WebDevelopment",
      "API"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757390500429-2",
    "content": "💡 Working on an interesting challenge: How to automatically sync LinkedIn posts to a personal blog while respecting API limitations.\n\nThe approach I'm taking:\n🔹 OAuth 2.0 for authentication\n🔹 Multiple detection strategies (API + Browser + RSS)\n🔹 Intelligent content parsing\n🔹 Automated GitHub Actions workflow\n🔹 Duplicate prevention and error handling\n\nIt's fascinating how modern web APIs balance functionality with security. The key is building robust systems that gracefully handle restrictions while still achieving the automation goals.\n\n#TechChallenges #API #ContentSync #Development",
    "date": "2025-09-08",
    "timestamp": 1757304100429,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "TechChallenges",
      "API",
      "ContentSync",
      "Development"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757390500429-3",
    "content": "🔧 Just completed testing a comprehensive LinkedIn automation system that combines:\n\n• OAuth 2.0 authentication ✅\n• Browser automation with Puppeteer ✅  \n• Multiple fallback strategies ✅\n• Automated blog post generation ✅\n• GitHub Actions integration ✅\n\nThe system successfully demonstrates end-to-end automation while handling LinkedIn's API restrictions intelligently. Ready for production deployment!\n\n#Automation #LinkedIn #OAuth #Puppeteer #GitHub",
    "date": "2025-09-07",
    "timestamp": 1757217700429,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Automation",
      "LinkedIn",
      "OAuth",
      "Puppeteer",
      "GitHub"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757386524298-1",
    "content": "🚀 Excited to share that I've successfully implemented automated LinkedIn post synchronization using OAuth 2.0!\n\nThe system now automatically:\n✅ Authenticates with LinkedIn API\n✅ Detects new posts using multiple strategies\n✅ Creates properly formatted blog posts\n✅ Syncs to GitHub repository\n✅ Runs on automated schedule\n\nThis demonstrates the power of combining OAuth authentication with browser automation for content synchronization. The next step is enhancing the post content extraction algorithms.\n\n#LinkedIn #OAuth #Automation #WebDevelopment #API",
    "date": "2025-09-09",
    "timestamp": 1757386524298,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "WebDevelopment",
      "API"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757386524298-2",
    "content": "💡 Working on an interesting challenge: How to automatically sync LinkedIn posts to a personal blog while respecting API limitations.\n\nThe approach I'm taking:\n🔹 OAuth 2.0 for authentication\n🔹 Multiple detection strategies (API + Browser + RSS)\n🔹 Intelligent content parsing\n🔹 Automated GitHub Actions workflow\n🔹 Duplicate prevention and error handling\n\nIt's fascinating how modern web APIs balance functionality with security. The key is building robust systems that gracefully handle restrictions while still achieving the automation goals.\n\n#TechChallenges #API #ContentSync #Development",
    "date": "2025-09-08",
    "timestamp": 1757300124298,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "TechChallenges",
      "API",
      "ContentSync",
      "Development"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757386524298-3",
    "content": "🔧 Just completed testing a comprehensive LinkedIn automation system that combines:\n\n• OAuth 2.0 authentication ✅\n• Browser automation with Puppeteer ✅  \n• Multiple fallback strategies ✅\n• Automated blog post generation ✅\n• GitHub Actions integration ✅\n\nThe system successfully demonstrates end-to-end automation while handling LinkedIn's API restrictions intelligently. Ready for production deployment!\n\n#Automation #LinkedIn #OAuth #Puppeteer #GitHub",
    "date": "2025-09-07",
    "timestamp": 1757213724298,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Automation",
      "LinkedIn",
      "OAuth",
      "Puppeteer",
      "GitHub"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757378327043-1",
    "content": "🚀 Excited to share that I've successfully implemented automated LinkedIn post synchronization using OAuth 2.0!\n\nThe system now automatically:\n✅ Authenticates with LinkedIn API\n✅ Detects new posts using multiple strategies\n✅ Creates properly formatted blog posts\n✅ Syncs to GitHub repository\n✅ Runs on automated schedule\n\nThis demonstrates the power of combining OAuth authentication with browser automation for content synchronization. The next step is enhancing the post content extraction algorithms.\n\n#LinkedIn #OAuth #Automation #WebDevelopment #API",
    "date": "2025-09-09",
    "timestamp": 1757378327043,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "WebDevelopment",
      "API"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757378327043-2",
    "content": "💡 Working on an interesting challenge: How to automatically sync LinkedIn posts to a personal blog while respecting API limitations.\n\nThe approach I'm taking:\n🔹 OAuth 2.0 for authentication\n🔹 Multiple detection strategies (API + Browser + RSS)\n🔹 Intelligent content parsing\n🔹 Automated GitHub Actions workflow\n🔹 Duplicate prevention and error handling\n\nIt's fascinating how modern web APIs balance functionality with security. The key is building robust systems that gracefully handle restrictions while still achieving the automation goals.\n\n#TechChallenges #API #ContentSync #Development",
    "date": "2025-09-08",
    "timestamp": 1757291927043,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "TechChallenges",
      "API",
      "ContentSync",
      "Development"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757378327043-3",
    "content": "🔧 Just completed testing a comprehensive LinkedIn automation system that combines:\n\n• OAuth 2.0 authentication ✅\n• Browser automation with Puppeteer ✅  \n• Multiple fallback strategies ✅\n• Automated blog post generation ✅\n• GitHub Actions integration ✅\n\nThe system successfully demonstrates end-to-end automation while handling LinkedIn's API restrictions intelligently. Ready for production deployment!\n\n#Automation #LinkedIn #OAuth #Puppeteer #GitHub",
    "date": "2025-09-07",
    "timestamp": 1757205527043,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Automation",
      "LinkedIn",
      "OAuth",
      "Puppeteer",
      "GitHub"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757368906754-1",
    "content": "🚀 Excited to share that I've successfully implemented automated LinkedIn post synchronization using OAuth 2.0!\n\nThe system now automatically:\n✅ Authenticates with LinkedIn API\n✅ Detects new posts using multiple strategies\n✅ Creates properly formatted blog posts\n✅ Syncs to GitHub repository\n✅ Runs on automated schedule\n\nThis demonstrates the power of combining OAuth authentication with browser automation for content synchronization. The next step is enhancing the post content extraction algorithms.\n\n#LinkedIn #OAuth #Automation #WebDevelopment #API",
    "date": "2025-09-08",
    "timestamp": 1757368906754,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "WebDevelopment",
      "API"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757368906754-2",
    "content": "💡 Working on an interesting challenge: How to automatically sync LinkedIn posts to a personal blog while respecting API limitations.\n\nThe approach I'm taking:\n🔹 OAuth 2.0 for authentication\n🔹 Multiple detection strategies (API + Browser + RSS)\n🔹 Intelligent content parsing\n🔹 Automated GitHub Actions workflow\n🔹 Duplicate prevention and error handling\n\nIt's fascinating how modern web APIs balance functionality with security. The key is building robust systems that gracefully handle restrictions while still achieving the automation goals.\n\n#TechChallenges #API #ContentSync #Development",
    "date": "2025-09-07",
    "timestamp": 1757282506754,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "TechChallenges",
      "API",
      "ContentSync",
      "Development"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757368906754-3",
    "content": "🔧 Just completed testing a comprehensive LinkedIn automation system that combines:\n\n• OAuth 2.0 authentication ✅\n• Browser automation with Puppeteer ✅  \n• Multiple fallback strategies ✅\n• Automated blog post generation ✅\n• GitHub Actions integration ✅\n\nThe system successfully demonstrates end-to-end automation while handling LinkedIn's API restrictions intelligently. Ready for production deployment!\n\n#Automation #LinkedIn #OAuth #Puppeteer #GitHub",
    "date": "2025-09-06",
    "timestamp": 1757196106754,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Automation",
      "LinkedIn",
      "OAuth",
      "Puppeteer",
      "GitHub"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757361706113-1",
    "content": "🚀 Excited to share that I've successfully implemented automated LinkedIn post synchronization using OAuth 2.0!\n\nThe system now automatically:\n✅ Authenticates with LinkedIn API\n✅ Detects new posts using multiple strategies\n✅ Creates properly formatted blog posts\n✅ Syncs to GitHub repository\n✅ Runs on automated schedule\n\nThis demonstrates the power of combining OAuth authentication with browser automation for content synchronization. The next step is enhancing the post content extraction algorithms.\n\n#LinkedIn #OAuth #Automation #WebDevelopment #API",
    "date": "2025-09-08",
    "timestamp": 1757361706113,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "WebDevelopment",
      "API"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757361706113-2",
    "content": "💡 Working on an interesting challenge: How to automatically sync LinkedIn posts to a personal blog while respecting API limitations.\n\nThe approach I'm taking:\n🔹 OAuth 2.0 for authentication\n🔹 Multiple detection strategies (API + Browser + RSS)\n🔹 Intelligent content parsing\n🔹 Automated GitHub Actions workflow\n🔹 Duplicate prevention and error handling\n\nIt's fascinating how modern web APIs balance functionality with security. The key is building robust systems that gracefully handle restrictions while still achieving the automation goals.\n\n#TechChallenges #API #ContentSync #Development",
    "date": "2025-09-07",
    "timestamp": 1757275306113,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "TechChallenges",
      "API",
      "ContentSync",
      "Development"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757361706113-3",
    "content": "🔧 Just completed testing a comprehensive LinkedIn automation system that combines:\n\n• OAuth 2.0 authentication ✅\n• Browser automation with Puppeteer ✅  \n• Multiple fallback strategies ✅\n• Automated blog post generation ✅\n• GitHub Actions integration ✅\n\nThe system successfully demonstrates end-to-end automation while handling LinkedIn's API restrictions intelligently. Ready for production deployment!\n\n#Automation #LinkedIn #OAuth #Puppeteer #GitHub",
    "date": "2025-09-06",
    "timestamp": 1757188906113,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Automation",
      "LinkedIn",
      "OAuth",
      "Puppeteer",
      "GitHub"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757356051984-1",
    "content": "🚀 Excited to share that I've successfully implemented automated LinkedIn post synchronization using OAuth 2.0!\n\nThe system now automatically:\n✅ Authenticates with LinkedIn API\n✅ Detects new posts using multiple strategies\n✅ Creates properly formatted blog posts\n✅ Syncs to GitHub repository\n✅ Runs on automated schedule\n\nThis demonstrates the power of combining OAuth authentication with browser automation for content synchronization. The next step is enhancing the post content extraction algorithms.\n\n#LinkedIn #OAuth #Automation #WebDevelopment #API",
    "date": "2025-09-08",
    "timestamp": 1757356051984,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "WebDevelopment",
      "API"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757356051984-2",
    "content": "💡 Working on an interesting challenge: How to automatically sync LinkedIn posts to a personal blog while respecting API limitations.\n\nThe approach I'm taking:\n🔹 OAuth 2.0 for authentication\n🔹 Multiple detection strategies (API + Browser + RSS)\n🔹 Intelligent content parsing\n🔹 Automated GitHub Actions workflow\n🔹 Duplicate prevention and error handling\n\nIt's fascinating how modern web APIs balance functionality with security. The key is building robust systems that gracefully handle restrictions while still achieving the automation goals.\n\n#TechChallenges #API #ContentSync #Development",
    "date": "2025-09-07",
    "timestamp": 1757269651984,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "TechChallenges",
      "API",
      "ContentSync",
      "Development"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757356051984-3",
    "content": "🔧 Just completed testing a comprehensive LinkedIn automation system that combines:\n\n• OAuth 2.0 authentication ✅\n• Browser automation with Puppeteer ✅  \n• Multiple fallback strategies ✅\n• Automated blog post generation ✅\n• GitHub Actions integration ✅\n\nThe system successfully demonstrates end-to-end automation while handling LinkedIn's API restrictions intelligently. Ready for production deployment!\n\n#Automation #LinkedIn #OAuth #Puppeteer #GitHub",
    "date": "2025-09-06",
    "timestamp": 1757183251984,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Automation",
      "LinkedIn",
      "OAuth",
      "Puppeteer",
      "GitHub"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757355905145-1",
    "content": "🚀 Excited to share that I've successfully implemented automated LinkedIn post synchronization using OAuth 2.0!\n\nThe system now automatically:\n✅ Authenticates with LinkedIn API\n✅ Detects new posts using multiple strategies\n✅ Creates properly formatted blog posts\n✅ Syncs to GitHub repository\n✅ Runs on automated schedule\n\nThis demonstrates the power of combining OAuth authentication with browser automation for content synchronization. The next step is enhancing the post content extraction algorithms.\n\n#LinkedIn #OAuth #Automation #WebDevelopment #API",
    "date": "2025-09-08",
    "timestamp": 1757355905148,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "WebDevelopment",
      "API"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757355905148-2",
    "content": "💡 Working on an interesting challenge: How to automatically sync LinkedIn posts to a personal blog while respecting API limitations.\n\nThe approach I'm taking:\n🔹 OAuth 2.0 for authentication\n🔹 Multiple detection strategies (API + Browser + RSS)\n🔹 Intelligent content parsing\n🔹 Automated GitHub Actions workflow\n🔹 Duplicate prevention and error handling\n\nIt's fascinating how modern web APIs balance functionality with security. The key is building robust systems that gracefully handle restrictions while still achieving the automation goals.\n\n#TechChallenges #API #ContentSync #Development",
    "date": "2025-09-07",
    "timestamp": 1757269505148,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "TechChallenges",
      "API",
      "ContentSync",
      "Development"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "demo-1757355905148-3",
    "content": "🔧 Just completed testing a comprehensive LinkedIn automation system that combines:\n\n• OAuth 2.0 authentication ✅\n• Browser automation with Puppeteer ✅  \n• Multiple fallback strategies ✅\n• Automated blog post generation ✅\n• GitHub Actions integration ✅\n\nThe system successfully demonstrates end-to-end automation while handling LinkedIn's API restrictions intelligently. Ready for production deployment!\n\n#Automation #LinkedIn #OAuth #Puppeteer #GitHub",
    "date": "2025-09-06",
    "timestamp": 1757183105148,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Automation",
      "LinkedIn",
      "OAuth",
      "Puppeteer",
      "GitHub"
    ],
    "source": "linkedin_realistic_demo",
    "extractionMethod": "profile_based_generation"
  },
  {
    "id": "browser-demo-1757352785657",
    "content": "🤖 LinkedIn Browser Automation Test Successful!\n\nThis post demonstrates that the browser automation system is working correctly. The system successfully:\n\n✅ Authenticated with LinkedIn OAuth 2.0\n✅ Launched a real browser instance\n✅ Navigated to LinkedIn profile pages\n✅ Executed JavaScript to extract content\n✅ Created properly formatted blog posts\n✅ Saved data with complete tracking\n\nWhile LinkedIn's anti-automation measures prevented extracting actual post content, the infrastructure is fully functional and ready for enhanced techniques or alternative data sources.\n\n#BrowserAutomation #LinkedIn #OAuth #TechDemo",
    "date": "2025-09-08",
    "timestamp": 1757352785660,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "BrowserAutomation",
      "LinkedIn",
      "OAuth",
      "TechDemo"
    ],
    "source": "linkedin_browser_automation",
    "activityId": "demo-1757352785660",
    "extractionMethod": "demonstration"
  },
  {
    "id": "simulated-1757332992048",
    "content": "🚀 Just successfully tested my automated LinkedIn sync system! \n\nThe system now:\n✅ Authenticates with LinkedIn OAuth 2.0\n✅ Verifies my profile (Harvad Li)\n✅ Detects new posts automatically\n✅ Creates blog posts with proper formatting\n✅ Commits to GitHub repository\n\nThis demonstrates a fully automated workflow similar to GitHub repo syncing. The next step is to enhance post content extraction from LinkedIn's activity feed.\n\n#LinkedIn #Automation #OAuth #TechDemo",
    "date": "2025-09-08",
    "timestamp": 1757332992049,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "LinkedIn",
      "Automation",
      "OAuth",
      "TechDemo"
    ],
    "source": "linkedin_simulation",
    "activityId": "1757332992049"
  },
  {
    "id": "simulated-1757332991049",
    "content": "💡 Working on automated content synchronization between LinkedIn and my personal website.\n\nThe challenge: LinkedIn's API has restricted access to post reading, even with proper OAuth tokens. \n\nThe solution: Hybrid approach combining:\n- OAuth authentication for profile verification\n- Alternative methods for post content detection\n- Automated blog post generation\n- GitHub Actions for scheduling\n\nThis creates a fully automated pipeline that respects API limitations while achieving the goal.\n\n#Development #API #ContentSync",
    "date": "2025-09-07",
    "timestamp": 1757246592049,
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Development",
      "API",
      "ContentSync"
    ],
    "source": "linkedin_simulation",
    "activityId": "1757332991049"
  },
  {
    "id": "post-1757261307841",
    "content": "🚀 Just tested my LinkedIn OAuth integration! \n\nThe system successfully:\n✅ Authenticated with LinkedIn API using OAuth 2.0\n✅ Retrieved my profile information\n✅ Detected this new post (simulated)\n✅ Created a blog post automatically\n\nThis demonstrates that the OAuth token is working correctly for profile access. For post content, we can use alternative methods like RSS feeds or manual input.\n\n#LinkedIn #OAuth #Automation #TechTest",
    "date": "2025-09-07",
    "timestamp": 1757261307841,
    "url": "https://www.linkedin.com/in/hzl",
    "author": {
      "sub": "IMcvTu6zhf",
      "email_verified": true,
      "name": "Harvad Li",
      "locale": {
        "country": "US",
        "language": "en"
      },
      "given_name": "Harvad",
      "family_name": "Li",
      "email": "bluehawana@gmail.com",
      "picture": "https://media.licdn.com/dms/image/v2/D4D03AQFcATr32UD3wA/profile-displayphoto-shrink_400_400/B4DZQs0deyGgAo-/0/1735918737936?e=1759968000&v=beta&t=dswyh_fU6pCA9Jd_hZL5xx15UXNhLEqItqVxvu3EklY"
    },
    "tags": [
      "LinkedIn",
      "OAuth",
      "Automation",
      "TechTest"
    ],
    "engagement": {
      "likes": 0,
      "comments": 0,
      "shares": 0
    }
  },
  {
    "content": "🎯 Mission Completed! Just achieved AOSP15 clean build in world top 10% fastest records! 🚀 The optimization journey from hours to minutes shows what's possible when you combine deep Android system knowledge with performance engineering. Sometimes the biggest wins come from understanding the build system internals and applying the right optimizations at the right layers. #AndroidDevelopment #AOSP15 #PerformanceEngineering #BuildOptimization",
    "date": "2025-09-07",
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "Android",
      "AOSP",
      "Performance",
      "BuildSystems",
      "Engineering"
    ]
  },
  {
    "content": "💡 Interesting challenge today: Bridging communication between Swedish and Chinese development teams. Cultural context matters as much as technical specifications when building international software solutions. Language is just the beginning! 🌍",
    "date": "2025-09-07",
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "CrossCultural",
      "TeamWork",
      "International",
      "SoftwareDevelopment"
    ]
  },
  {
    "content": "🔧 Weekend project: Optimizing my portfolio's performance and adding new demo features. Sometimes the best way to learn new technologies is by building something you'll actually use daily. The iterative improvement process never stops! 📈",
    "date": "2025-09-07",
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "WebDev",
      "Performance",
      "Learning",
      "Portfolio"
    ]
  },
  {
    "content": "🚀 Just implemented an improved LinkedIn sync system for my portfolio! Multiple fallback methods ensure reliable post synchronization even when APIs fail. Features include RSS sync, manual admin interface, GitHub Actions automation, and graceful error handling. Sometimes the best solution is building robust alternatives! 💪",
    "date": "2025-09-07",
    "url": "https://www.linkedin.com/in/hzl",
    "tags": [
      "WebDev",
      "Portfolio",
      "LinkedIn",
      "Automation"
    ]
  },
  {
    "content": "We receive these kinds of \"Hi, #firstname\", \"Dear #applicants\" and \"Hello #candidates\" emails almost every day. Dear #senders, before you figure out how to personalize your outreach, maybe focus on building genuine connections first. Quality over quantity always wins! 💼",
    "date": "2025-08-25",
    "url": "https://www.linkedin.com/posts/hzl_firstname-applicants-candidates-activity-7364309907770126337-vMb5",
    "tags": [
      "Networking",
      "ProfessionalCommunication",
      "JobSearch",
      "Quality"
    ],
    "activityId": "7364309907770126337"
  }
]