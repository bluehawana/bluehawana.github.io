name: Update LinkedIn Posts (OAuth)

on:
  schedule:
    # Run every 2 hours to catch new posts quickly
    - cron: '0 */2 * * *'
  workflow_dispatch:
    # Allow manual triggering
    inputs:
      force_update:
        description: 'Force update even if no changes'
        required: false
        default: 'false'
      test_mode:
        description: 'Run in test mode (no commits)'
        required: false
        default: 'false'

jobs:
  update-posts:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup environment
        run: |
          # Create data directory
          mkdir -p data
          mkdir -p _posts
          
      - name: Set up LinkedIn OAuth token
        env:
          LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
        run: |
          echo "OAuth token configured"
          
      - name: Install dependencies
        run: npm install
        
      - name: Run LinkedIn Ultimate Automation
        env:
          LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
        run: node linkedin-ultimate-automation.js
        
      - name: Check for changes
        id: changes
        run: |
          # Check for changes in data files and blog posts
          if git diff --quiet data/ _posts/; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            # Show what changed
            echo "Changed files:"
            git diff --name-only data/ _posts/ || true
          fi
          
      - name: Commit and push changes
        if: (steps.changes.outputs.has_changes == 'true' || github.event.inputs.force_update == 'true') && github.event.inputs.test_mode != 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "LinkedIn OAuth Bot"
          git add data/ _posts/
          
          # Create detailed commit message
          NEW_POSTS=$(find _posts -name "*linkedin*" -newer data/linkedin-sync-log.json 2>/dev/null | wc -l || echo "0")
          git commit -m "ðŸ”„ LinkedIn OAuth sync - $(date '+%Y-%m-%d %H:%M:%S')

          - New posts synced: ${NEW_POSTS}
          - Updated data files and blog posts
          - Automated via OAuth 2.0 API"
          
          git push
          
      - name: Create sync report
        if: always()
        run: |
          echo "## LinkedIn Sync Report" >> $GITHUB_STEP_SUMMARY
          echo "- **Date**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes**: ${{ steps.changes.outputs.has_changes }}" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "data/linkedin-posts.json" ]; then
            POST_COUNT=$(jq length data/linkedin-posts.json)
            echo "- **Posts Count**: $POST_COUNT" >> $GITHUB_STEP_SUMMARY
          fi